apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "io.fabric"
apply plugin: "com.github.ben-manes.versions"

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

def productVersion = "$versionMajor.$versionMinor.$versionPatch"

def static getCommitCount() {
    return "git rev-list HEAD --count --no-merges".execute().text.trim().toInteger()
}

android {
    defaultConfig {
        applicationId "com.yelpexplorer"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"
                ]
            }
        }
    }

    signingConfigs {
        debug {
            File keystoreDebug = file("../debug.keystore")
            if (keystoreDebug.exists()) {
                storeFile keystoreDebug
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            useProguard false
            signingConfig signingConfigs.debug
            ext.enableCrashlytics = false
        }
    }

    productFlavors {
        dev {
            dimension "server"
            def versionBuild = getCommitCount()
            versionCode 1
            versionName "$productVersion.$versionBuild"
            multiDexEnabled true
        }
    }

    dexOptions {
        maxProcessCount 8
        javaMaxHeapSize "2g"
        preDexLibraries true
        dexInProcess true
    }

    packagingOptions {
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
        exclude ".readme"
    }

    lintOptions {
        abortOnError true
        xmlReport false
        htmlReport true
        warning "InvalidPackage"
    }

    dependencyUpdates.resolutionStrategy {
        componentSelection { rules ->
            rules.all { ComponentSelection selection ->
                boolean rejected = ["alpha", "beta", "rc", "cr", "m"].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject("Release candidate")
                }
            }
        }
    }
}

apply from: "../test_dependencies.gradle"

dependencies {
    implementation project(':features:business')
    implementation project(':features:settings')
    implementation project(':libraries:core')

    // KOTLIN
    implementation Dependencies.kotlin

    // ROOM
    implementation Dependencies.androidx_room_runtime
    implementation Dependencies.androidx_room_ktx
    kapt Dependencies.androidx_room_compiler
    androidTestImplementation Dependencies.androidx_room_testing

    // DAGGER
    implementation Dependencies.dagger
    implementation Dependencies.dagger_android
    implementation Dependencies.dagger_android_support
    kapt Dependencies.dagger_compiler
    kapt Dependencies.dagger_android_processor

    // GRAPHQL
    implementation Dependencies.graphql
    implementation Dependencies.graphql_coroutines

    // GSON
    implementation Dependencies.gson

    // OKIO
    implementation Dependencies.okio

    // OKHTTP
    implementation Dependencies.okhttp
    implementation Dependencies.okhttp_logging_interceptor

    // RETROFIT
    implementation Dependencies.retrofit
    implementation Dependencies.retrofit_converter_gson
    debugImplementation Dependencies.retrofit_mock

    // GLIDE
    implementation Dependencies.glide
    implementation Dependencies.glide_okhttp_integration

    // TIMBER
    implementation Dependencies.timber

    // CRASHLYTICS
    implementation Dependencies.crashlytics

    // LEAK CANARY
    debugImplementation Dependencies.leakcanary
}

apply plugin: "com.google.gms.google-services"
